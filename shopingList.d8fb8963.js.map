{"mappings":"kpBAsBA,IAAAA,EACAC,E,iJArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,KCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,uJCAzDH,EAAA,S,wECAAI,EAAiB,IAAAC,IAAoBL,EAAA,SAAAM,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,W,iBCG5F,MAAMC,EAAQ,IAEdC,iBACE,MAAMC,EAAaC,aAAaC,QAAQ,SAClCC,EAAYd,KAAKC,MAAMU,GAE7B,IAAK,MAAMhB,KAAMmB,EAAW,CAC1BC,QAAQC,IAAIrB,GACZ,MAAMsB,QAAa,EAAAC,EAAAC,aAAYxB,GACzByB,EAAS5B,OAAO4B,OAAOH,GAEvBV,EAAMa,EAAO,GACbC,EAAaD,EAAO,GACpBE,EAASF,EAAO,GAChBG,EAAQH,EAAO,IACfI,EAAcJ,EAAO,IAE3BX,EAAMgB,KAAK,C,IAAElB,E,OAAKe,E,MAAQC,E,YAAOC,E,WAAaH,G,CAEhD,OAAOZ,C,EAETiB,GAAUC,MAAKC,IACbC,EAAiBD,EAAO,IAKEE,SAASC,cAAc,wBAgB7BC,mBAAmB,YAbxB,oXAkBjB,MAAMC,EAAO,CACXC,aAAcJ,SAASC,cAAc,iBACrCI,WAAYL,SAASC,cAAc,eACnCK,eAAgBN,SAASC,cAAc,qBAGnCG,aAAEG,EAAYF,WAAEG,EAAUF,eAAEG,GAAmBN,EAGrD,IAAIO,EAAc,EAElB,SAASX,EAAiBY,GACxB,MAAMC,EAAaC,KAAKC,KAAKH,EAAM/C,OAJhB,GAKnB,IAAImD,EAAmB,GA4BvB,IAAK,IAAIpD,EAAI,EAAGA,GAAKiD,EAAYjD,GAAK,EAElCoD,GADEpD,IAAM+C,EACY,gEAAgE/C,kBAEhE,wCAAwCA,kBAIhE8C,EAAeO,UAAYD,EAEvBJ,EAAM/C,QAAU,GAClB4C,EAAWN,mBAAmB,YAtCrB,8JAuCTM,EAAWN,mBAAmB,aAlCrB,8JAmCTM,EAAWN,mBAAmB,aA9Bf,qSA+BfM,EAAWN,mBAAmB,YAvBf,sSAyBfe,EAAYN,GACZH,EAAWU,MAAMC,QAAU,QAG7B,MAAMC,EAAoBpB,SAASqB,iBAAiB,qBACpDD,EAAkBE,SAAQ,CAACC,EAAQC,KACjCD,EAAOE,iBAAiB,SAAS,KAC/Bf,EAAcc,EAAQ,EACtB,MAAME,EAzDS,GAyDKhB,EAAc,GAC5BiB,EAAWD,EA1DF,EA6DfT,EAFsBN,EAAMiB,MAAMF,EAAYC,IAG9CE,EAAcN,EAAO,GACrB,IAGJ,MAAMO,EAAiB9B,SAASC,cAAc,aACxC8B,EAAkB/B,SAASC,cAAc,cACzC+B,EAAuBhC,SAASC,cAAc,mBAC9CgC,EAAwBjC,SAASC,cAAc,oBACrD6B,EAAeL,iBAAiB,SAAS,KACvC,GAAIf,EAAcE,EAAY,CAC5BF,GAAe,EACf,MAAMgB,EAzES,GAyEKhB,EAAc,GAC5BiB,EAAWD,EA1EF,EA6EfT,EAFsBN,EAAMiB,MAAMF,EAAYC,IAG9CE,EAAcT,EAAkBV,EAAc,IAE9CqB,EAAgBG,UAAW,EACvBxB,IAAgBE,IAClBkB,EAAeI,UAAW,GAG5B,MACMC,EADgBf,EAAkBV,EAAc,GACd0B,wBAClCC,EAAiB5B,EAAe2B,wBAChCE,EAAoBH,EAAkBI,KAAOF,EAAeE,KAC5DC,EAAqBL,EAAkBM,MAAQJ,EAAeE,KAEhEC,EAAqB/B,EAAeiC,YACtCjC,EAAekC,YACbH,EAAqB/B,EAAeiC,YAC7BJ,EAAoB,IAC7B7B,EAAekC,YAAcL,E,KAKnCP,EAAgBN,iBAAiB,SAAS,KACxC,GAAIf,EAAc,EAAG,CACnBA,GAAe,EACf,MAAMgB,EAvGS,GAuGKhB,EAAc,GAC5BiB,EAAWD,EAxGF,EA2GfT,EAFsBN,EAAMiB,MAAMF,EAAYC,IAG9CE,EAAcT,EAAkBV,EAAc,IAE9CoB,EAAeI,UAAW,EACN,IAAhBxB,IACFqB,EAAgBG,UAAW,GAG7B,MACMC,EADgBf,EAAkBV,EAAc,GACd0B,wBAClCC,EAAiB5B,EAAe2B,wBAChCE,EAAoBH,EAAkBI,KAAOF,EAAeE,KAC5DC,EAAqBL,EAAkBM,MAAQJ,EAAeE,KAEhED,EAAoB,EACtB7B,EAAekC,YAAcL,EACpBE,EAAqB/B,EAAeiC,cAC7CjC,EAAekC,YACbH,EAAqB/B,EAAeiC,Y,KAI5CV,EAAqBP,iBAAiB,SAAS,KAC7C,GAAIf,EAAcE,EAAY,CAC5BF,GAAe,EACXA,EAAcE,IAChBF,EAAcE,GAEhB,MAAMc,EAvIS,GAuIKhB,EAAc,GAC5BiB,EAAWD,EAxIF,EA2IfT,EAFsBN,EAAMiB,MAAMF,EAAYC,IAG9CE,EAAcT,EAAkBV,EAAc,IAE9CqB,EAAgBG,UAAW,EACvBxB,IAAgBE,IAClBkB,EAAeI,UAAW,GAG5B,MACMC,EADgBf,EAAkBV,EAAc,GACd0B,wBAClCC,EAAiB5B,EAAe2B,wBAChCE,EAAoBH,EAAkBI,KAAOF,EAAeE,KAC5DC,EAAqBL,EAAkBM,MAAQJ,EAAeE,KAEhEC,EAAqB/B,EAAeiC,YACtCjC,EAAekC,YACbH,EAAqB/B,EAAeiC,YAC7BJ,EAAoB,IAC7B7B,EAAekC,YAAcL,E,KAKnCL,EAAsBR,iBAAiB,SAAS,KAC9C,GAAIf,EAAc,EAAG,CACnBA,GAAe,EACXA,EAAc,IAChBA,EAAc,GAEhB,MAAMgB,EAxKS,GAwKKhB,EAAc,GAC5BiB,EAAWD,EAzKF,EA4KfT,EAFsBN,EAAMiB,MAAMF,EAAYC,IAG9CE,EAAcT,EAAkBV,EAAc,IAE9CoB,EAAeI,UAAW,EACN,IAAhBxB,IACFqB,EAAgBG,UAAW,GAG7B,MACMC,EADgBf,EAAkBV,EAAc,GACd0B,wBAClCC,EAAiB5B,EAAe2B,wBAChCE,EAAoBH,EAAkBI,KAAOF,EAAeE,KAC5DC,EAAqBL,EAAkBM,MAAQJ,EAAeE,KAEhED,EAAoB,EACtB7B,EAAekC,YAAcL,EACpBE,EAAqB/B,EAAeiC,cAC7CjC,EAAekC,YACbH,EAAqB/B,EAAeiC,Y,KAK5CzB,EAAYN,EAAMiB,MAAM,EAnML,G,CAsMrB,SAASC,EAAce,GACK5C,SAASqB,iBAAiB,qBAElCC,SAAQC,IACxBA,EAAOsB,UAAUC,OAAO,0BAA0B,IAEpDF,EAAaC,UAAUE,IAAI,0B,CAG7B,SAAS9B,EAAY+B,GACnBzC,EAAaS,UAAY,GACzBgC,EAAKC,KAAI,EAACxE,IAAEA,EAAGe,OAAEA,EAAMC,MAAEA,EAAKC,YAAEA,EAAWH,WAAEA,MAC3C,MAAM2D,EAAS,uFAEgCzE,4HAGhBgB,oSAQYF,wHAGNG,wGAGLF,2dAkBhCe,EAAaL,mBAAmB,YAAagD,EAAO,G,CAgBnC,IAAjBvE,EAAMf,OAZV,WACE,MAAMsF,EAAS,yLAKiCC,EAAA/E,8BAGhDmC,EAAaS,UAAYkC,C,CAIzBE,GAEArD,EAAiBpB","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-92ad7943d004d8bd.js","src/shoppingListMain.js","node_modules/@parcel/runtime-js/lib/runtime-76342f5c5df99664.js","src/js/shopingList.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"gkzyW\\\":\\\"shopingList.d8fb8963.js\\\",\\\"2sOyc\\\":\\\"10.26cd9257.png\\\",\\\"g2LZc\\\":\\\"shopingList.eaec917c.js\\\"}\"));","import './js/sideBar/renderListSupportUkraine';\nimport './js/header';\nimport './js/refs';\nimport './js/scroll';\nimport './js/loader';\nimport './js/mobile-menu';\nimport './js/localstorageBooks';\nimport './js/shopingList'","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"2sOyc\")).toString();","import defaultImage from '../images/10.png';\nimport { fetchBookID } from './fetchApi';\n\nconst books = [];\n\nasync function getData() {\n  const dataString = localStorage.getItem('books');\n  const dataParse = JSON.parse(dataString);\n\n  for (const id of dataParse) {\n    console.log(id);\n    const data = await fetchBookID(id);\n    const values = Object.values(data);\n\n    const url = values[7];\n    const categories = values[1];\n    const author = values[6];\n    const title = values[24];\n    const description = values[15];\n\n    books.push({ url, author, title, description, categories });\n  }\n  return books;\n}\ngetData().then(result => {\n  renderPagination(result);\n});\n\nimport '../images/10.png';\n\nconst shoppingListContent = document.querySelector('#shoppingListContent');\n\nfunction renderPaginationMarkkup() {\n  const markup = ` <div class=\"shoppingListBox\">\n  <h1 class=\"shoppingTitle\">\n            Shopping <span class=\"shoppingTitleSpan\">List</span>\n          </h1>\n  <div class=\"booksBox\">\n            <ul class=\"ShoppingList\"></ul>\n             <div class=\"pagination\">\n            <ul class=\"paginationList\">\n\n            </ul>\n          </div>\n          </div>\n          </div>`;\n  shoppingListContent.insertAdjacentHTML('beforeend', markup);\n}\n\nrenderPaginationMarkkup();\n\nconst refs = {\n  shoppingList: document.querySelector('.ShoppingList'),\n  pagination: document.querySelector('.pagination'),\n  paginationList: document.querySelector('.paginationList'),\n};\n\nconst { shoppingList, pagination, paginationList } = refs;\n\nconst booksPerPage = 3;\nlet currentPage = 1;\n\nfunction renderPagination(books) {\n  const totalPages = Math.ceil(books.length / booksPerPage);\n  let paginationMarkup = '';\n  let next = `<button class=\"increase\">\n      <svg width=\"13\" height=\"13\">\n        <use href=\"/symbol-defs.505e88bc.svg#icon-next\"></use>\n      </svg>\n    </button>`;\n  let back = `<button class=\"reduction\">\n     <svg width=\"13\" height=\"13\">\n        <use href=\"/symbol-defs.505e88bc.svg#icon-back\"></use>\n      </svg>\n    </button>`;\n  let doubleBack = `<button class=\"doubleReduction\">\n      <svg width=\"13\" height=\"13\">\n        <use href=\"/symbol-defs.505e88bc.svg#icon-back \"></use>\n      </svg>\n      <svg class=\"more\" width=\"13\" height=\"13\">\n        <use href=\"/symbol-defs.505e88bc.svg#icon-back\"></use>\n      </svg>\n    </button>`;\n  let doubleNext = `<button class=\"doubleIncrease\">\n      <svg width=\"13\" height=\"13\">\n        <use href=\"/symbol-defs.505e88bc.svg#icon-next\"></use>\n      </svg>\n      <svg class=\"less\" width=\"13\" height=\"13\">\n        <use href=\"/symbol-defs.505e88bc.svg#icon-next \"></use>\n      </svg>\n    </button>`;\n\n  for (let i = 1; i <= totalPages; i += 1) {\n    if (i === currentPage) {\n      paginationMarkup += `<li><button class=\"paginationButton paginationButtonCurrent\">${i}</button></li>`;\n    } else {\n      paginationMarkup += `<li><button class=\"paginationButton\">${i}</button></li>`;\n    }\n  }\n\n  paginationList.innerHTML = paginationMarkup;\n\n  if (books.length >= 2) {\n    pagination.insertAdjacentHTML('beforeend', next);\n    pagination.insertAdjacentHTML('afterbegin', back);\n    pagination.insertAdjacentHTML('afterbegin', doubleBack);\n    pagination.insertAdjacentHTML('beforeend', doubleNext);\n  } else {\n    renderBooks(books);\n    pagination.style.display = 'none';\n  }\n\n  const paginationButtons = document.querySelectorAll('.paginationButton');\n  paginationButtons.forEach((button, index) => {\n    button.addEventListener('click', () => {\n      currentPage = index + 1;\n      const startIndex = (currentPage - 1) * booksPerPage;\n      const endIndex = startIndex + booksPerPage;\n      const booksToRender = books.slice(startIndex, endIndex);\n\n      renderBooks(booksToRender);\n      selectsActive(button);\n    });\n  });\n\n  const increaseButton = document.querySelector('.increase');\n  const reductionButton = document.querySelector('.reduction');\n  const doubleIncreaseButton = document.querySelector('.doubleIncrease');\n  const doubleReductionButton = document.querySelector('.doubleReduction');\n  increaseButton.addEventListener('click', () => {\n    if (currentPage < totalPages) {\n      currentPage += 1;\n      const startIndex = (currentPage - 1) * booksPerPage;\n      const endIndex = startIndex + booksPerPage;\n      const booksToRender = books.slice(startIndex, endIndex);\n\n      renderBooks(booksToRender);\n      selectsActive(paginationButtons[currentPage - 1]);\n\n      reductionButton.disabled = false;\n      if (currentPage === totalPages) {\n        increaseButton.disabled = true;\n      }\n\n      const currentButton = paginationButtons[currentPage - 1];\n      const currentButtonRect = currentButton.getBoundingClientRect();\n      const paginationRect = paginationList.getBoundingClientRect();\n      const currentButtonLeft = currentButtonRect.left - paginationRect.left;\n      const currentButtonRight = currentButtonRect.right - paginationRect.left;\n\n      if (currentButtonRight > paginationList.offsetWidth) {\n        paginationList.scrollLeft +=\n          currentButtonRight - paginationList.offsetWidth;\n      } else if (currentButtonLeft < 0) {\n        paginationList.scrollLeft += currentButtonLeft;\n      }\n    }\n  });\n\n  reductionButton.addEventListener('click', () => {\n    if (currentPage > 1) {\n      currentPage -= 1;\n      const startIndex = (currentPage - 1) * booksPerPage;\n      const endIndex = startIndex + booksPerPage;\n      const booksToRender = books.slice(startIndex, endIndex);\n\n      renderBooks(booksToRender);\n      selectsActive(paginationButtons[currentPage - 1]);\n\n      increaseButton.disabled = false;\n      if (currentPage === 1) {\n        reductionButton.disabled = true;\n      }\n\n      const currentButton = paginationButtons[currentPage - 1];\n      const currentButtonRect = currentButton.getBoundingClientRect();\n      const paginationRect = paginationList.getBoundingClientRect();\n      const currentButtonLeft = currentButtonRect.left - paginationRect.left;\n      const currentButtonRight = currentButtonRect.right - paginationRect.left;\n\n      if (currentButtonLeft < 0) {\n        paginationList.scrollLeft += currentButtonLeft;\n      } else if (currentButtonRight > paginationList.offsetWidth) {\n        paginationList.scrollLeft +=\n          currentButtonRight - paginationList.offsetWidth;\n      }\n    }\n  });\n  doubleIncreaseButton.addEventListener('click', () => {\n    if (currentPage < totalPages) {\n      currentPage += 2;\n      if (currentPage > totalPages) {\n        currentPage = totalPages;\n      }\n      const startIndex = (currentPage - 1) * booksPerPage;\n      const endIndex = startIndex + booksPerPage;\n      const booksToRender = books.slice(startIndex, endIndex);\n\n      renderBooks(booksToRender);\n      selectsActive(paginationButtons[currentPage - 1]);\n\n      reductionButton.disabled = false;\n      if (currentPage === totalPages) {\n        increaseButton.disabled = true;\n      }\n\n      const currentButton = paginationButtons[currentPage - 1];\n      const currentButtonRect = currentButton.getBoundingClientRect();\n      const paginationRect = paginationList.getBoundingClientRect();\n      const currentButtonLeft = currentButtonRect.left - paginationRect.left;\n      const currentButtonRight = currentButtonRect.right - paginationRect.left;\n\n      if (currentButtonRight > paginationList.offsetWidth) {\n        paginationList.scrollLeft +=\n          currentButtonRight - paginationList.offsetWidth;\n      } else if (currentButtonLeft < 0) {\n        paginationList.scrollLeft += currentButtonLeft;\n      }\n    }\n  });\n\n  doubleReductionButton.addEventListener('click', () => {\n    if (currentPage > 1) {\n      currentPage -= 2;\n      if (currentPage < 1) {\n        currentPage = 1;\n      }\n      const startIndex = (currentPage - 1) * booksPerPage;\n      const endIndex = startIndex + booksPerPage;\n      const booksToRender = books.slice(startIndex, endIndex);\n\n      renderBooks(booksToRender);\n      selectsActive(paginationButtons[currentPage - 1]);\n\n      increaseButton.disabled = false;\n      if (currentPage === 1) {\n        reductionButton.disabled = true;\n      }\n\n      const currentButton = paginationButtons[currentPage - 1];\n      const currentButtonRect = currentButton.getBoundingClientRect();\n      const paginationRect = paginationList.getBoundingClientRect();\n      const currentButtonLeft = currentButtonRect.left - paginationRect.left;\n      const currentButtonRight = currentButtonRect.right - paginationRect.left;\n\n      if (currentButtonLeft < 0) {\n        paginationList.scrollLeft += currentButtonLeft;\n      } else if (currentButtonRight > paginationList.offsetWidth) {\n        paginationList.scrollLeft +=\n          currentButtonRight - paginationList.offsetWidth;\n      }\n    }\n  });\n\n  renderBooks(books.slice(0, booksPerPage));\n}\n\nfunction selectsActive(activeButton) {\n  const paginationButtons = document.querySelectorAll('.paginationButton');\n\n  paginationButtons.forEach(button => {\n    button.classList.remove('paginationButtonCurrent');\n  });\n  activeButton.classList.add('paginationButtonCurrent');\n}\n\nfunction renderBooks(book) {\n  shoppingList.innerHTML = '';\n  book.map(({ url, author, title, description, categories }) => {\n    const markup = `\n      <li class=\"shoppingItem\">\n        <img loading=\"lazy\" class=\"bookImg\" src=\"${url}\" alt=\"\" />\n        <div class=\"bookInformationBox\">\n          <div class=\"scroll\">\n            <h2 class=\"bookName\">${title}</h2>\n          </div>\n          <button class=\"dump\">\n            <svg width=\"16\" height=\"16\">\n              <use href=\"/symbol-defs.505e88bc.svg#icon-dump\"></use>\n            </svg>\n          </button>\n          <div class=\"scroll\">\n            <p class=\"artisticDirectionBook\">${categories}</p>\n          </div>\n          <div class=\"artisticDirectionBookScroll\">\n            <p class=\"descriptionBook\">${description}</p>\n          </div>\n          <div class=\"authorBookScroll\">\n            <p class=\"authorBook\">${author}</p>\n          </div>\n        </div>\n        <div class=\"imgLink\">\n          <a href=\"\">\n          <svg width=\"16\" height=\"16\">\n              <use href=\"/amazon_- logo-1000x302.svg#Page-1\"></use>\n            </svg>\n          </a>\n          <a href=\"\">\n          <svg width=\"16\" height=\"16\">\n              <use href=\"/Users/maksim/Desktop/безіменна папка/book-square-svgrepo-com.svg\"></use>\n            </svg>\n          </a>\n        </div>\n      </li>\n    `;\n\n    shoppingList.insertAdjacentHTML('beforeend', markup);\n  });\n}\n\nfunction renderEmpty() {\n  const markup = `<div class=\"emptyPaga\">\n      <p class=\"emptyText\">\n        This page is empty, add some books and proceed to order.\n      </p>\n\n      <img loading=\"lazy\" class=\"emptyImg\" src=\"${defaultImage}\" alt=\"\" />\n\n    </div>`;\n  shoppingList.innerHTML = markup;\n}\n\nif (books.length === 0) {\n  renderEmpty();\n} else {\n  renderPagination(books);\n}\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$b74cecd916dfa520$exports","URL","resolve","import","meta","url","toString","$c46528b13329d7c4$var$books","async","dataString","localStorage","getItem","dataParse","console","log","data","$9TCtp","fetchBookID","values","categories","author","title","description","push","$c46528b13329d7c4$var$getData","then","result","$c46528b13329d7c4$var$renderPagination","document","querySelector","insertAdjacentHTML","$c46528b13329d7c4$var$refs","shoppingList","pagination","paginationList","$c46528b13329d7c4$var$shoppingList","$c46528b13329d7c4$var$pagination","$c46528b13329d7c4$var$paginationList","$c46528b13329d7c4$var$currentPage","books1","totalPages","Math","ceil","paginationMarkup","innerHTML","$c46528b13329d7c4$var$renderBooks","style","display","paginationButtons","querySelectorAll","forEach","button","index","addEventListener","startIndex","endIndex","slice","$c46528b13329d7c4$var$selectsActive","increaseButton","reductionButton","doubleIncreaseButton","doubleReductionButton","disabled","currentButtonRect","getBoundingClientRect","paginationRect","currentButtonLeft","left","currentButtonRight","right","offsetWidth","scrollLeft","activeButton","classList","remove","add","book","map","markup","$parcel$interopDefault","$c46528b13329d7c4$var$renderEmpty"],"version":3,"file":"shopingList.d8fb8963.js.map"}