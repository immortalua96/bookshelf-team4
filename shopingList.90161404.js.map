{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-92ad7943d004d8bd.js","src/shoppingListMain.js","node_modules/@parcel/runtime-js/lib/runtime-76342f5c5df99664.js","src/js/shopingList.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"gkzyW\\\":\\\"shopingList.90161404.js\\\",\\\"2sOyc\\\":\\\"10.26cd9257.png\\\",\\\"g2LZc\\\":\\\"shopingList.06bd7ffe.js\\\"}\"));","import './js/sideBar/renderListSupportUkraine';\nimport './js/header';\nimport './js/refs';\nimport './js/scroll';\nimport './js/loader';\nimport './js/mobile-menu';\nimport './js/localstorageBooks';\nimport './js/shopingList'","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"2sOyc\")).toString();","import defaultImage from '../images/10.png';\nimport { fetchBookID } from './fetchApi';\nimport { renderMarketPlaceLink } from '/src/js/marketplaceLinks';\n\nconst books = [];\n\nexport async function getData() {\n  const dataString = localStorage.getItem('books');\n  const dataParse = JSON.parse(dataString);\n\n  if (!dataParse || !localStorage.getItem('books')) {\n    return [];\n  }\n\n  for (const id of dataParse) {\n    const data = await fetchBookID(id);\n    const values = Object.values(data);\n\n    const dataId = values[0];\n    const url = values[7];\n    const categories = values[1];\n    const author = values[6];\n    const title = values[24];\n    const description = values[15];\n    const links = values[27];\n\n    books.push({\n      dataId,\n      url,\n      author,\n      title,\n      description,\n      categories,\n      links,\n    });\n  }\n\n  return books;\n}\n\ngetData().then(result => {\n  if (result.length === 0) {\n    renderEmpty();\n  } else {\n    renderPagination(result);\n  }\n});\n\nimport '../images/10.png';\n\nconst shoppingListContent = document.querySelector('#shoppingListContent');\n\nfunction renderPaginationMarkkup() {\n  const markup = ` <div class=\"shoppingListBox\">\n  <h1 class=\"shoppingTitle\">\n            Shopping <span class=\"shoppingTitleSpan\">List</span>\n          </h1>\n  <div class=\"booksBox\">\n            <ul class=\"ShoppingList\"></ul>\n             <div class=\"pagination\">\n            <ul class=\"paginationList\">\n\n            </ul>\n          </div>\n          </div>\n          </div>`;\n  shoppingListContent.insertAdjacentHTML('beforeend', markup);\n}\n\nrenderPaginationMarkkup();\n\nconst refs = {\n  shoppingList: document.querySelector('.ShoppingList'),\n  pagination: document.querySelector('.pagination'),\n  paginationList: document.querySelector('.paginationList'),\n};\n\nconst { shoppingList, pagination, paginationList } = refs;\n\nconst booksPerPage = 3;\nlet currentPage = 1;\n\nfunction renderPagination(books) {\n  const totalPages = Math.ceil(books.length / booksPerPage);\n  let paginationMarkup = '';\n  let next = `<button class=\"increase\">\n      <svg width=\"13\" height=\"13\">\n        <use href=\"/symbol-defs.505e88bc.svg#icon-next\"></use>\n      </svg>\n    </button>`;\n  let back = `<button class=\"reduction\">\n     <svg width=\"13\" height=\"13\">\n        <use href=\"/symbol-defs.505e88bc.svg#icon-back\"></use>\n      </svg>\n    </button>`;\n  let doubleBack = `<button class=\"doubleReduction\">\n      <svg width=\"13\" height=\"13\">\n        <use href=\"/symbol-defs.505e88bc.svg#icon-back \"></use>\n      </svg>\n      <svg class=\"more\" width=\"13\" height=\"13\">\n        <use href=\"/symbol-defs.505e88bc.svg#icon-back\"></use>\n      </svg>\n    </button>`;\n  let doubleNext = `<button class=\"doubleIncrease\">\n      <svg width=\"13\" height=\"13\">\n        <use href=\"/symbol-defs.505e88bc.svg#icon-next\"></use>\n      </svg>\n      <svg class=\"less\" width=\"13\" height=\"13\">\n        <use href=\"/symbol-defs.505e88bc.svg#icon-next \"></use>\n      </svg>\n    </button>`;\n\n  for (let i = 1; i <= totalPages; i += 1) {\n    if (i === currentPage) {\n      paginationMarkup += `<li class=\"paginationItem\"><button class=\"paginationButton paginationButtonCurrent\">${i}</button></li>`;\n    } else {\n      paginationMarkup += `<li class=\"paginationItem\"><button class=\"paginationButton\">${i}</button></li>`;\n    }\n  }\n\n  paginationList.innerHTML = paginationMarkup;\n\n  if (books.length >= 2) {\n    pagination.insertAdjacentHTML('beforeend', next);\n    pagination.insertAdjacentHTML('afterbegin', back);\n    pagination.insertAdjacentHTML('afterbegin', doubleBack);\n    pagination.insertAdjacentHTML('beforeend', doubleNext);\n  } else {\n    renderBooks(books);\n    pagination.style.display = 'none';\n  }\n\n  const paginationButtons = document.querySelectorAll('.paginationButton');\n  paginationButtons.forEach((button, index) => {\n    button.addEventListener('click', () => {\n      currentPage = index + 1;\n      const startIndex = (currentPage - 1) * booksPerPage;\n      const endIndex = startIndex + booksPerPage;\n      const booksToRender = books.slice(startIndex, endIndex);\n\n      renderBooks(booksToRender);\n      selectsActive(button);\n    });\n  });\n\n  const increaseButton = document.querySelector('.increase');\n  const reductionButton = document.querySelector('.reduction');\n  const doubleIncreaseButton = document.querySelector('.doubleIncrease');\n  const doubleReductionButton = document.querySelector('.doubleReduction');\n  increaseButton.addEventListener('click', () => {\n    if (currentPage < totalPages) {\n      currentPage += 1;\n      const startIndex = (currentPage - 1) * booksPerPage;\n      const endIndex = startIndex + booksPerPage;\n      const booksToRender = books.slice(startIndex, endIndex);\n\n      renderBooks(booksToRender);\n      selectsActive(paginationButtons[currentPage - 1]);\n\n      reductionButton.disabled = false;\n      if (currentPage === totalPages) {\n        increaseButton.disabled = true;\n      }\n\n      const currentButton = paginationButtons[currentPage - 1];\n      const currentButtonRect = currentButton.getBoundingClientRect();\n      const paginationRect = paginationList.getBoundingClientRect();\n      const currentButtonLeft = currentButtonRect.left - paginationRect.left;\n      const currentButtonRight = currentButtonRect.right - paginationRect.left;\n\n      if (currentButtonRight > paginationList.offsetWidth) {\n        paginationList.scrollLeft +=\n          currentButtonRight - paginationList.offsetWidth;\n      } else if (currentButtonLeft < 0) {\n        paginationList.scrollLeft += currentButtonLeft;\n      }\n    }\n  });\n\n  reductionButton.addEventListener('click', () => {\n    if (currentPage > 1) {\n      currentPage -= 1;\n      const startIndex = (currentPage - 1) * booksPerPage;\n      const endIndex = startIndex + booksPerPage;\n      const booksToRender = books.slice(startIndex, endIndex);\n\n      renderBooks(booksToRender);\n      selectsActive(paginationButtons[currentPage - 1]);\n\n      increaseButton.disabled = false;\n      if (currentPage === 1) {\n        reductionButton.disabled = true;\n      }\n\n      const currentButton = paginationButtons[currentPage - 1];\n      const currentButtonRect = currentButton.getBoundingClientRect();\n      const paginationRect = paginationList.getBoundingClientRect();\n      const currentButtonLeft = currentButtonRect.left - paginationRect.left;\n      const currentButtonRight = currentButtonRect.right - paginationRect.left;\n\n      if (currentButtonLeft < 0) {\n        paginationList.scrollLeft += currentButtonLeft;\n      } else if (currentButtonRight > paginationList.offsetWidth) {\n        paginationList.scrollLeft +=\n          currentButtonRight - paginationList.offsetWidth;\n      }\n    }\n  });\n  doubleIncreaseButton.addEventListener('click', () => {\n    if (currentPage < totalPages) {\n      currentPage += 2;\n      if (currentPage > totalPages) {\n        currentPage = totalPages;\n      }\n      const startIndex = (currentPage - 1) * booksPerPage;\n      const endIndex = startIndex + booksPerPage;\n      const booksToRender = books.slice(startIndex, endIndex);\n\n      renderBooks(booksToRender);\n      selectsActive(paginationButtons[currentPage - 1]);\n\n      reductionButton.disabled = false;\n      if (currentPage === totalPages) {\n        increaseButton.disabled = true;\n      }\n\n      const currentButton = paginationButtons[currentPage - 1];\n      const currentButtonRect = currentButton.getBoundingClientRect();\n      const paginationRect = paginationList.getBoundingClientRect();\n      const currentButtonLeft = currentButtonRect.left - paginationRect.left;\n      const currentButtonRight = currentButtonRect.right - paginationRect.left;\n\n      if (currentButtonRight > paginationList.offsetWidth) {\n        paginationList.scrollLeft +=\n          currentButtonRight - paginationList.offsetWidth;\n      } else if (currentButtonLeft < 0) {\n        paginationList.scrollLeft += currentButtonLeft;\n      }\n    }\n  });\n\n  doubleReductionButton.addEventListener('click', () => {\n    if (currentPage > 1) {\n      currentPage -= 2;\n      if (currentPage < 1) {\n        currentPage = 1;\n      }\n      const startIndex = (currentPage - 1) * booksPerPage;\n      const endIndex = startIndex + booksPerPage;\n      const booksToRender = books.slice(startIndex, endIndex);\n\n      renderBooks(booksToRender);\n      selectsActive(paginationButtons[currentPage - 1]);\n\n      increaseButton.disabled = false;\n      if (currentPage === 1) {\n        reductionButton.disabled = true;\n      }\n\n      const currentButton = paginationButtons[currentPage - 1];\n      const currentButtonRect = currentButton.getBoundingClientRect();\n      const paginationRect = paginationList.getBoundingClientRect();\n      const currentButtonLeft = currentButtonRect.left - paginationRect.left;\n      const currentButtonRight = currentButtonRect.right - paginationRect.left;\n\n      if (currentButtonLeft < 0) {\n        paginationList.scrollLeft += currentButtonLeft;\n      } else if (currentButtonRight > paginationList.offsetWidth) {\n        paginationList.scrollLeft +=\n          currentButtonRight - paginationList.offsetWidth;\n      }\n    }\n  });\n\n  renderBooks(books.slice(0, booksPerPage));\n}\n\nfunction selectsActive(activeButton) {\n  const paginationButtons = document.querySelectorAll('.paginationButton');\n\n  paginationButtons.forEach(button => {\n    button.classList.remove('paginationButtonCurrent');\n  });\n  activeButton.classList.add('paginationButtonCurrent');\n}\nfunction renderBooks(books) {\n  shoppingList.innerHTML = '';\n  books.forEach(\n    ({ dataId, url, author, title, description, categories, links }) => {\n      const markup = `\n      <li class=\"shoppingItem\" id=\"${dataId}\">\n        <img class=\"bookImg\" src=\"${url}\" alt=\"\" loading=\"lazy\" />\n        <div class=\"bookInformationBox\">\n          <div class=\"scroll\">\n            <h2 class=\"bookName\">${title}</h2>\n          </div>\n          <button class=\"dump\">\n            <svg width=\"16\" height=\"16\">\n              <use href=\"./icons/symbol-defs.svg#icon-dump\"></use>\n            </svg>\n          </button>\n          <div class=\"scroll\">\n            <p class=\"artisticDirectionBook\">${categories}</p>\n          </div>\n          <div class=\"artisticDirectionBookScroll\">\n            <p class=\"descriptionBook\">${description}</p>\n          </div> \n          <div class=\"authorBookScroll\">\n            <p class=\"authorBook\">${author}</p>\n          </div>\n          <div class=\"fieldMarketplace-${dataId}\"></div>\n        </div>\n      </li>\n    `;\n\n      shoppingList.insertAdjacentHTML('beforeend', markup);\n      const marketplaceField = document.querySelector(\n        `.fieldMarketplace-${dataId}`\n      );\n      const marketplaceMarkup = renderMarketPlaceLink(links);\n      marketplaceField.insertAdjacentHTML('beforeend', marketplaceMarkup);\n    }\n  );\n\n  const dumpButtons = document.querySelectorAll('.dump');\n\n  dumpButtons.forEach(button => {\n    button.addEventListener('click', async event => {\n      const liElement = event.target.closest('li');\n      const localID = liElement.id;\n\n      if (liElement) {\n        liElement.remove();\n\n        const storedIds = JSON.parse(localStorage.getItem('books'));\n        const index = storedIds.indexOf(localID);\n        if (index !== -1) {\n          storedIds.splice(index, 1);\n          localStorage.setItem('books', JSON.stringify(storedIds));\n        }\n        if (storedIds.length === 0) {\n          renderEmpty();\n          pagination.style.display = 'none';\n        }\n      }\n    });\n  });\n}\n\nfunction renderEmpty() {\n  const markup = `<div class=\"emptyPaga\">\n      <p class=\"emptyText\">\n        This page is empty, add some books and proceed to order.\n      </p>\n\n      <img class=\"emptyImg\" src=\"${defaultImage}\" alt=\"\" />\n\n    </div>`;\n  shoppingList.innerHTML = markup;\n}\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$b74cecd916dfa520$exports","URL","resolve","import","meta","url","toString","$c46528b13329d7c4$var$books","async","dataString","localStorage","getItem","dataParse","data","$9TCtp","fetchBookID","values","dataId","categories","author","title","description","links","push","$c46528b13329d7c4$export$7a171f172be0782e","then","result","$c46528b13329d7c4$var$renderEmpty","books1","totalPages","Math","ceil","paginationMarkup","next","back","doubleBack","doubleNext","$c46528b13329d7c4$var$currentPage","$c46528b13329d7c4$var$paginationList","innerHTML","$c46528b13329d7c4$var$pagination","insertAdjacentHTML","$c46528b13329d7c4$var$renderBooks","style","display","paginationButtons","document","querySelectorAll","forEach","button","index","addEventListener","startIndex","endIndex","slice","$c46528b13329d7c4$var$selectsActive","increaseButton","querySelector","reductionButton","doubleIncreaseButton","doubleReductionButton","disabled","currentButtonRect","getBoundingClientRect","paginationRect","currentButtonLeft","left","currentButtonRight","right","offsetWidth","scrollLeft","$c46528b13329d7c4$var$renderPagination","$c46528b13329d7c4$var$refs","shoppingList","pagination","paginationList","$c46528b13329d7c4$var$shoppingList","activeButton","classList","remove","add","books2","markup","marketplaceField","marketplaceMarkup","$dRymf","renderMarketPlaceLink","event","liElement","target","closest","localID","storedIds","indexOf","splice","setItem","stringify","$parcel$interopDefault"],"version":3,"file":"shopingList.90161404.js.map"}