{"mappings":"iiBAAAA,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,oGCAzD,I,EAAAC,EAAAJ,EAAA,S,aCAAK,EAAiBL,EAAA,SAAAM,aAA6C,SAAWN,EAAA,SAAAO,QAA6C,S,iBDGhHC,EAAQ,G,SAECC,I,OAAAA,EAAfC,EAAAN,EAAA,CAAAM,EAAAC,GAAAC,MAAA,SAAAC,I,IACQC,EACAC,EAEDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAMC,EAEHC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,E,kEAZFd,EAAae,aAAaC,QAAQ,SAClCf,EAAYb,KAAKC,MAAMW,GAExBE,GAAQ,EAARC,GAAQ,EAARC,OAAQa,E,SAARZ,EAAYJ,EAASiB,OAAAC,Y,UAArBjB,GAAAI,EAAAD,EAAQe,QAAAC,KAAA,C,uBAAFd,EAAND,EAAQgB,MACXC,QAAQC,IAAIjB,G,WACO,EAAAkB,EAAAC,aAAYnB,G,QAAzBC,EAAImB,EAAAC,KACJnB,EAASoB,OAAOpB,OAAOD,GAEvBE,EAAMD,EAAO,GACbE,EAAaF,EAAO,GACpBG,EAASH,EAAO,GAChBI,EAAQJ,EAAO,IACfK,EAAcL,EAAO,IAE3Bf,EAAMoC,KAAK,CAAEpB,MAAKE,SAAQC,QAAOC,cAAaH,e,QAX3CT,GAAQ,E,yEAARC,GAAQ,EAARC,EAAQuB,EAAAI,G,4BAAR7B,GAAQ,MAARG,EAAQ2B,QAAR3B,EAAQ2B,S,sBAAR7B,EAAQ,C,sBAARC,E,yFAaEV,G,6EAjBauC,MAAAC,KAAAC,U,oBAAPxC,EAAOsC,MAAAC,KAAAC,U,EAmBtBC,GAAUC,MAAK,SAAAC,GACbC,EAAiBD,E,IAKSE,SAASC,cAAc,wBAgB7BC,mBAAmB,YAbvB,oXAkBlB,IAoQQC,EApQFC,EAAO,CACXC,aAAcL,SAASC,cAAc,iBACrCK,WAAYN,SAASC,cAAc,eACnCM,eAAgBP,SAASC,cAAc,oBAGjCO,EAA6CJ,EAA7CC,aAAcI,EAA+BL,EAA/BE,WAAYI,EAAmBN,EAAnBG,eAG9BI,EAAc,EAElB,SAASZ,EAAiBa,GA8BxB,IA7BA,IAAMC,EAAaC,KAAKC,KAAKH,EAAMI,OAJhB,GAKfC,EAAmB,GA4BdC,EAAI,EAAGA,GAAKL,EAAYK,GAAK,EAElCD,GADEC,IAAMP,EACY,gEAAkEQ,OAAFD,EAAE,kBAElE,wCAA0CC,OAAFD,EAAE,kBAIlER,EAAeU,UAAYH,EAEvBL,EAAMI,QAAU,GAClBP,EAAWP,mBAAmB,YAtCpB,8JAuCVO,EAAWP,mBAAmB,aAlCpB,8JAmCVO,EAAWP,mBAAmB,aA9Bd,qSA+BhBO,EAAWP,mBAAmB,YAvBd,sSAyBhBmB,EAAYT,GACZH,EAAWa,MAAMC,QAAU,QAG7B,IAAMC,EAAoBxB,SAASyB,iBAAiB,qBACpDD,EAAkBE,SAAQ,SAACC,EAAQC,GACjCD,EAAOE,iBAAiB,SAAS,WAE/B,IAAMC,EAzDS,IAwDfnB,EAAciB,EAAQ,GACY,GAC5BG,EAAWD,EA1DF,EA6DfT,EAFsBT,EAAMoB,MAAMF,EAAYC,IAG9CE,EAAcN,E,OAIlB,IAAMO,EAAiBlC,SAASC,cAAc,aACxCkC,EAAkBnC,SAASC,cAAc,cACzCmC,EAAuBpC,SAASC,cAAc,mBAC9CoC,EAAwBrC,SAASC,cAAc,oBACrDiC,EAAeL,iBAAiB,SAAS,WACvC,GAAIlB,EAAcE,EAAY,CAE5B,IAAMiB,EAzES,IAwEfnB,GAAe,GACmB,GAC5BoB,EAAWD,EA1EF,EA6EfT,EAFsBT,EAAMoB,MAAMF,EAAYC,IAG9CE,EAAcT,EAAkBb,EAAc,IAE9CwB,EAAgBG,UAAW,EACvB3B,IAAgBE,IAClBqB,EAAeI,UAAW,GAG5B,IACMC,EADgBf,EAAkBb,EAAc,GACd6B,wBAClCC,EAAiB/B,EAAe8B,wBAChCE,EAAoBH,EAAkBI,KAAOF,EAAeE,KAC5DC,EAAqBL,EAAkBM,MAAQJ,EAAeE,KAEhEC,EAAqBlC,EAAeoC,YACtCpC,EAAeqC,YACbH,EAAqBlC,EAAeoC,YAC7BJ,EAAoB,IAC7BhC,EAAeqC,YAAcL,E,KAKnCP,EAAgBN,iBAAiB,SAAS,WACxC,GAAIlB,EAAc,EAAG,CAEnB,IAAMmB,EAvGS,IAsGfnB,GAAe,GACmB,GAC5BoB,EAAWD,EAxGF,EA2GfT,EAFsBT,EAAMoB,MAAMF,EAAYC,IAG9CE,EAAcT,EAAkBb,EAAc,IAE9CuB,EAAeI,UAAW,EACN,IAAhB3B,IACFwB,EAAgBG,UAAW,GAG7B,IACMC,EADgBf,EAAkBb,EAAc,GACd6B,wBAClCC,EAAiB/B,EAAe8B,wBAChCE,EAAoBH,EAAkBI,KAAOF,EAAeE,KAC5DC,EAAqBL,EAAkBM,MAAQJ,EAAeE,KAEhED,EAAoB,EACtBhC,EAAeqC,YAAcL,EACpBE,EAAqBlC,EAAeoC,cAC7CpC,EAAeqC,YACbH,EAAqBlC,EAAeoC,Y,KAI5CV,EAAqBP,iBAAiB,SAAS,WAC7C,GAAIlB,EAAcE,EAAY,EAC5BF,GAAe,GACGE,IAChBF,EAAcE,GAEhB,IAAMiB,EAvIS,GAuIKnB,EAAc,GAC5BoB,EAAWD,EAxIF,EA2IfT,EAFsBT,EAAMoB,MAAMF,EAAYC,IAG9CE,EAAcT,EAAkBb,EAAc,IAE9CwB,EAAgBG,UAAW,EACvB3B,IAAgBE,IAClBqB,EAAeI,UAAW,GAG5B,IACMC,EADgBf,EAAkBb,EAAc,GACd6B,wBAClCC,EAAiB/B,EAAe8B,wBAChCE,EAAoBH,EAAkBI,KAAOF,EAAeE,KAC5DC,EAAqBL,EAAkBM,MAAQJ,EAAeE,KAEhEC,EAAqBlC,EAAeoC,YACtCpC,EAAeqC,YACbH,EAAqBlC,EAAeoC,YAC7BJ,EAAoB,IAC7BhC,EAAeqC,YAAcL,E,KAKnCL,EAAsBR,iBAAiB,SAAS,WAC9C,GAAIlB,EAAc,EAAG,EACnBA,GAAe,GACG,IAChBA,EAAc,GAEhB,IAAMmB,EAxKS,GAwKKnB,EAAc,GAC5BoB,EAAWD,EAzKF,EA4KfT,EAFsBT,EAAMoB,MAAMF,EAAYC,IAG9CE,EAAcT,EAAkBb,EAAc,IAE9CuB,EAAeI,UAAW,EACN,IAAhB3B,IACFwB,EAAgBG,UAAW,GAG7B,IACMC,EADgBf,EAAkBb,EAAc,GACd6B,wBAClCC,EAAiB/B,EAAe8B,wBAChCE,EAAoBH,EAAkBI,KAAOF,EAAeE,KAC5DC,EAAqBL,EAAkBM,MAAQJ,EAAeE,KAEhED,EAAoB,EACtBhC,EAAeqC,YAAcL,EACpBE,EAAqBlC,EAAeoC,cAC7CpC,EAAeqC,YACbH,EAAqBlC,EAAeoC,Y,KAK5CzB,EAAYT,EAAMoB,MAAM,EAnML,G,CAsMrB,SAASC,EAAce,GACKhD,SAASyB,iBAAiB,qBAElCC,SAAQ,SAAAC,GACxBA,EAAOsB,UAAUC,OAAO,0B,IAE1BF,EAAaC,UAAUE,IAAI,0B,CAG7B,SAAS9B,EAAY+B,GACnB5C,EAAaY,UAAY,GACzBgC,EAAKC,KAAI,SAAAC,G,IAAGpF,EAAGoF,EAAHpF,IAAKE,EAAMkF,EAANlF,OAAQC,EAAKiF,EAALjF,MAAOC,EAAWgF,EAAXhF,YAAaH,EAAUmF,EAAVnF,WACrCgC,EAAS,wEAKgBgB,OAHCjD,EAAI,4HAWOiD,OARZ9C,EAAM,oSAWA8C,OAHMhD,EAAW,wHAMtBgD,OAHK7C,EAAY,wGAGV6C,OAAP/C,EAAO,2dAkBvCoC,EAAaN,mBAAmB,YAAaC,E,IAgB5B,IAAjBjD,EAAM8D,QAXFb,EAAS,0KAK+BgB,OAAb/D,EAAAL,GAAa,6BAG9CyD,EAAaY,UAAYjB,GAMzBJ,EAAiB7C,E","sources":["node_modules/@parcel/runtime-js/lib/runtime-2a34bef67a041aab.js","src/js/shopingList.js","node_modules/@parcel/runtime-js/lib/runtime-6d35921290ef19a6.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"4i6qq\\\":\\\"shopingList.8a733b1d.js\\\",\\\"98hEa\\\":\\\"10.26cd9257.png\\\"}\"));","import defaultImage from '../images/10.png';\nimport { fetchBookID } from './fetchApi';\n\nconst books = [];\n\nasync function getData() {\n  const dataString = localStorage.getItem('books');\n  const dataParse = JSON.parse(dataString);\n\n  for (const id of dataParse) {\n    console.log(id);\n    const data = await fetchBookID(id);\n    const values = Object.values(data);\n\n    const url = values[7];\n    const categories = values[1];\n    const author = values[6];\n    const title = values[24];\n    const description = values[15];\n\n    books.push({ url, author, title, description, categories });\n  }\n  return books;\n}\ngetData().then(result => {\n  renderPagination(result);\n});\n\nimport '../images/10.png';\n\nconst shoppingListContent = document.querySelector('#shoppingListContent');\n\nfunction renderPaginationMarkkup() {\n  const markup = ` <div class=\"shoppingListBox\">\n  <h1 class=\"shoppingTitle\">\n            Shopping <span class=\"shoppingTitleSpan\">List</span>\n          </h1>\n  <div class=\"booksBox\">\n            <ul class=\"ShoppingList\"></ul>\n             <div class=\"pagination\">\n            <ul class=\"paginationList\">\n\n            </ul>\n          </div>\n          </div>\n          </div>`;\n  shoppingListContent.insertAdjacentHTML('beforeend', markup);\n}\n\nrenderPaginationMarkkup();\n\nconst refs = {\n  shoppingList: document.querySelector('.ShoppingList'),\n  pagination: document.querySelector('.pagination'),\n  paginationList: document.querySelector('.paginationList'),\n};\n\nconst { shoppingList, pagination, paginationList } = refs;\n\nconst booksPerPage = 3;\nlet currentPage = 1;\n\nfunction renderPagination(books) {\n  const totalPages = Math.ceil(books.length / booksPerPage);\n  let paginationMarkup = '';\n  let next = `<button class=\"increase\">\n      <svg width=\"13\" height=\"13\">\n        <use href=\"/symbol-defs.505e88bc.svg#icon-next\"></use>\n      </svg>\n    </button>`;\n  let back = `<button class=\"reduction\">\n     <svg width=\"13\" height=\"13\">\n        <use href=\"/symbol-defs.505e88bc.svg#icon-back\"></use>\n      </svg>\n    </button>`;\n  let doubleBack = `<button class=\"doubleReduction\">\n      <svg width=\"13\" height=\"13\">\n        <use href=\"/symbol-defs.505e88bc.svg#icon-back \"></use>\n      </svg>\n      <svg class=\"more\" width=\"13\" height=\"13\">\n        <use href=\"/symbol-defs.505e88bc.svg#icon-back\"></use>\n      </svg>\n    </button>`;\n  let doubleNext = `<button class=\"doubleIncrease\">\n      <svg width=\"13\" height=\"13\">\n        <use href=\"/symbol-defs.505e88bc.svg#icon-next\"></use>\n      </svg>\n      <svg class=\"less\" width=\"13\" height=\"13\">\n        <use href=\"/symbol-defs.505e88bc.svg#icon-next \"></use>\n      </svg>\n    </button>`;\n\n  for (let i = 1; i <= totalPages; i += 1) {\n    if (i === currentPage) {\n      paginationMarkup += `<li><button class=\"paginationButton paginationButtonCurrent\">${i}</button></li>`;\n    } else {\n      paginationMarkup += `<li><button class=\"paginationButton\">${i}</button></li>`;\n    }\n  }\n\n  paginationList.innerHTML = paginationMarkup;\n\n  if (books.length >= 2) {\n    pagination.insertAdjacentHTML('beforeend', next);\n    pagination.insertAdjacentHTML('afterbegin', back);\n    pagination.insertAdjacentHTML('afterbegin', doubleBack);\n    pagination.insertAdjacentHTML('beforeend', doubleNext);\n  } else {\n    renderBooks(books);\n    pagination.style.display = 'none';\n  }\n\n  const paginationButtons = document.querySelectorAll('.paginationButton');\n  paginationButtons.forEach((button, index) => {\n    button.addEventListener('click', () => {\n      currentPage = index + 1;\n      const startIndex = (currentPage - 1) * booksPerPage;\n      const endIndex = startIndex + booksPerPage;\n      const booksToRender = books.slice(startIndex, endIndex);\n\n      renderBooks(booksToRender);\n      selectsActive(button);\n    });\n  });\n\n  const increaseButton = document.querySelector('.increase');\n  const reductionButton = document.querySelector('.reduction');\n  const doubleIncreaseButton = document.querySelector('.doubleIncrease');\n  const doubleReductionButton = document.querySelector('.doubleReduction');\n  increaseButton.addEventListener('click', () => {\n    if (currentPage < totalPages) {\n      currentPage += 1;\n      const startIndex = (currentPage - 1) * booksPerPage;\n      const endIndex = startIndex + booksPerPage;\n      const booksToRender = books.slice(startIndex, endIndex);\n\n      renderBooks(booksToRender);\n      selectsActive(paginationButtons[currentPage - 1]);\n\n      reductionButton.disabled = false;\n      if (currentPage === totalPages) {\n        increaseButton.disabled = true;\n      }\n\n      const currentButton = paginationButtons[currentPage - 1];\n      const currentButtonRect = currentButton.getBoundingClientRect();\n      const paginationRect = paginationList.getBoundingClientRect();\n      const currentButtonLeft = currentButtonRect.left - paginationRect.left;\n      const currentButtonRight = currentButtonRect.right - paginationRect.left;\n\n      if (currentButtonRight > paginationList.offsetWidth) {\n        paginationList.scrollLeft +=\n          currentButtonRight - paginationList.offsetWidth;\n      } else if (currentButtonLeft < 0) {\n        paginationList.scrollLeft += currentButtonLeft;\n      }\n    }\n  });\n\n  reductionButton.addEventListener('click', () => {\n    if (currentPage > 1) {\n      currentPage -= 1;\n      const startIndex = (currentPage - 1) * booksPerPage;\n      const endIndex = startIndex + booksPerPage;\n      const booksToRender = books.slice(startIndex, endIndex);\n\n      renderBooks(booksToRender);\n      selectsActive(paginationButtons[currentPage - 1]);\n\n      increaseButton.disabled = false;\n      if (currentPage === 1) {\n        reductionButton.disabled = true;\n      }\n\n      const currentButton = paginationButtons[currentPage - 1];\n      const currentButtonRect = currentButton.getBoundingClientRect();\n      const paginationRect = paginationList.getBoundingClientRect();\n      const currentButtonLeft = currentButtonRect.left - paginationRect.left;\n      const currentButtonRight = currentButtonRect.right - paginationRect.left;\n\n      if (currentButtonLeft < 0) {\n        paginationList.scrollLeft += currentButtonLeft;\n      } else if (currentButtonRight > paginationList.offsetWidth) {\n        paginationList.scrollLeft +=\n          currentButtonRight - paginationList.offsetWidth;\n      }\n    }\n  });\n  doubleIncreaseButton.addEventListener('click', () => {\n    if (currentPage < totalPages) {\n      currentPage += 2;\n      if (currentPage > totalPages) {\n        currentPage = totalPages;\n      }\n      const startIndex = (currentPage - 1) * booksPerPage;\n      const endIndex = startIndex + booksPerPage;\n      const booksToRender = books.slice(startIndex, endIndex);\n\n      renderBooks(booksToRender);\n      selectsActive(paginationButtons[currentPage - 1]);\n\n      reductionButton.disabled = false;\n      if (currentPage === totalPages) {\n        increaseButton.disabled = true;\n      }\n\n      const currentButton = paginationButtons[currentPage - 1];\n      const currentButtonRect = currentButton.getBoundingClientRect();\n      const paginationRect = paginationList.getBoundingClientRect();\n      const currentButtonLeft = currentButtonRect.left - paginationRect.left;\n      const currentButtonRight = currentButtonRect.right - paginationRect.left;\n\n      if (currentButtonRight > paginationList.offsetWidth) {\n        paginationList.scrollLeft +=\n          currentButtonRight - paginationList.offsetWidth;\n      } else if (currentButtonLeft < 0) {\n        paginationList.scrollLeft += currentButtonLeft;\n      }\n    }\n  });\n\n  doubleReductionButton.addEventListener('click', () => {\n    if (currentPage > 1) {\n      currentPage -= 2;\n      if (currentPage < 1) {\n        currentPage = 1;\n      }\n      const startIndex = (currentPage - 1) * booksPerPage;\n      const endIndex = startIndex + booksPerPage;\n      const booksToRender = books.slice(startIndex, endIndex);\n\n      renderBooks(booksToRender);\n      selectsActive(paginationButtons[currentPage - 1]);\n\n      increaseButton.disabled = false;\n      if (currentPage === 1) {\n        reductionButton.disabled = true;\n      }\n\n      const currentButton = paginationButtons[currentPage - 1];\n      const currentButtonRect = currentButton.getBoundingClientRect();\n      const paginationRect = paginationList.getBoundingClientRect();\n      const currentButtonLeft = currentButtonRect.left - paginationRect.left;\n      const currentButtonRight = currentButtonRect.right - paginationRect.left;\n\n      if (currentButtonLeft < 0) {\n        paginationList.scrollLeft += currentButtonLeft;\n      } else if (currentButtonRight > paginationList.offsetWidth) {\n        paginationList.scrollLeft +=\n          currentButtonRight - paginationList.offsetWidth;\n      }\n    }\n  });\n\n  renderBooks(books.slice(0, booksPerPage));\n}\n\nfunction selectsActive(activeButton) {\n  const paginationButtons = document.querySelectorAll('.paginationButton');\n\n  paginationButtons.forEach(button => {\n    button.classList.remove('paginationButtonCurrent');\n  });\n  activeButton.classList.add('paginationButtonCurrent');\n}\n\nfunction renderBooks(book) {\n  shoppingList.innerHTML = '';\n  book.map(({ url, author, title, description, categories }) => {\n    const markup = `\n      <li class=\"shoppingItem\">\n        <img class=\"bookImg\" src=\"${url}\" alt=\"\" />\n        <div class=\"bookInformationBox\">\n          <div class=\"scroll\">\n            <h2 class=\"bookName\">${title}</h2>\n          </div>\n          <button class=\"dump\">\n            <svg width=\"16\" height=\"16\">\n              <use href=\"/symbol-defs.505e88bc.svg#icon-dump\"></use>\n            </svg>\n          </button>\n          <div class=\"scroll\">\n            <p class=\"artisticDirectionBook\">${categories}</p>\n          </div>\n          <div class=\"artisticDirectionBookScroll\">\n            <p class=\"descriptionBook\">${description}</p>\n          </div>\n          <div class=\"authorBookScroll\">\n            <p class=\"authorBook\">${author}</p>\n          </div>\n        </div>\n        <div class=\"imgLink\">\n          <a href=\"\">\n          <svg width=\"16\" height=\"16\">\n              <use href=\"/amazon_- logo-1000x302.svg#Page-1\"></use>\n            </svg>\n          </a>\n          <a href=\"\">\n          <svg width=\"16\" height=\"16\">\n              <use href=\"/Users/maksim/Desktop/безіменна папка/book-square-svgrepo-com.svg\"></use>\n            </svg>\n          </a>\n        </div>\n      </li>\n    `;\n\n    shoppingList.insertAdjacentHTML('beforeend', markup);\n  });\n}\n\nfunction renderEmpty() {\n  const markup = `<div class=\"emptyPaga\">\n      <p class=\"emptyText\">\n        This page is empty, add some books and proceed to order.\n      </p>\n\n      <img class=\"emptyImg\" src=\"${defaultImage}\" alt=\"\" />\n\n    </div>`;\n  shoppingList.innerHTML = markup;\n}\n\nif (books.length === 0) {\n  renderEmpty();\n} else {\n  renderPagination(books);\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('4i6qq') + require('./helpers/bundle-manifest').resolve(\"98hEa\");"],"names":["parcelRequire","register","JSON","parse","$bpxeT","$e4d7a83639bcbf70$exports","getBundleURL","resolve","$9225980863c1e255$var$books","$9225980863c1e255$var$_getData","$parcel$interopDefault","$2TvXO","mark","_callee","dataString","dataParse","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","id","data","values","url","categories","author","title","description","localStorage","getItem","undefined","Symbol","iterator","next","done","value","console","log","$sRYpV","fetchBookID","_ctx","sent","Object","push","t0","return","apply","this","arguments","$9225980863c1e255$var$getData","then","result","$9225980863c1e255$var$renderPagination","document","querySelector","insertAdjacentHTML","markup","$9225980863c1e255$var$refs","shoppingList","pagination","paginationList","$9225980863c1e255$var$shoppingList","$9225980863c1e255$var$pagination","$9225980863c1e255$var$paginationList","$9225980863c1e255$var$currentPage","books1","totalPages","Math","ceil","length","paginationMarkup","i","concat","innerHTML","$9225980863c1e255$var$renderBooks","style","display","paginationButtons","querySelectorAll","forEach","button","index","addEventListener","startIndex","endIndex","slice","$9225980863c1e255$var$selectsActive","increaseButton","reductionButton","doubleIncreaseButton","doubleReductionButton","disabled","currentButtonRect","getBoundingClientRect","paginationRect","currentButtonLeft","left","currentButtonRight","right","offsetWidth","scrollLeft","activeButton","classList","remove","add","book","map","param"],"version":3,"file":"shopingList.8a733b1d.js.map"}